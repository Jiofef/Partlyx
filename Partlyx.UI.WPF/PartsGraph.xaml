<UserControl x:Class="Partlyx.UI.WPF.PartsGraph"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:beh="clr-namespace:Partlyx.UI.WPF.Behaviors"
             xmlns:h="clr-namespace:Partlyx.UI.WPF.Helpers"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:graphvm="clr-namespace:Partlyx.ViewModels.Graph;assembly=Partlyx.ViewModels"
             xmlns:local="clr-namespace:Partlyx.UI.WPF"
             xmlns:localo="clr-namespace:Partlyx.UI.WPF.OtherControls"
             xmlns:zoom="https://github.com/Moravuscz/WPFZoomPanel"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="{StaticResource PxWhiteBrush}"
             x:Name="Root">
    <Grid h:SizeObserver.Observe="True" h:SizeObserver.BindableWidth="{Binding PanAndZoomController.ElementWidth}" h:SizeObserver.BindableHeight="{Binding PanAndZoomController.ElementHeight}"
          h:SizeObserver.SizeChangedCommand="{Binding CenterizePanPositionCommand}"
          h:SizeObserver.OneShotCommand="True">
        <localo:ZoomPanControl PanPositionX="{Binding PanAndZoomController.PanPositionX, Mode=TwoWay}" PanPositionY="{Binding PanAndZoomController.PanPositionY, Mode=TwoWay}" 
                               ZoomLevel="{Binding PanAndZoomController.ZoomLevel, Mode=TwoWay}"
                               MinZoom="{Binding PanAndZoomController.MinZoom}"
                               MaxZoom="{Binding PanAndZoomController.MaxZoom}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <!-- edges behind -->
                <ItemsControl ItemsSource="{Binding Edges}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <localo:FromToLineControl From="{Binding From}" To="{Binding To}" Brush="{StaticResource PxBlackBrush}" LineThickness="2"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!-- nodes on top -->
                <ItemsControl ItemsSource="{Binding Nodes}">
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type graphvm:RecipeGraphNodeViewModel}">
                            <Button Width="{Binding Width}" Height="{Binding Height}" Padding="2" Background="{StaticResource PxWhiteBrush}"
                            BorderBrush="{StaticResource PxBlue0Brush}" BorderThickness="2" VerticalContentAlignment="Stretch">
                                <Grid VerticalAlignment="Stretch">
                                    <StackPanel VerticalAlignment="Bottom" Orientation="Vertical">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Value.UiNode.ColumnText}"/>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Value.UiNode.SecondaryColumnText}"/>
                                    </StackPanel>
                                </Grid>

                                <Button.ContextMenu>
                                    <ContextMenu Style="{StaticResource MaterialDesignMenu}">
                                        <MenuItem Header="Find recipe in tree" Command="{Binding Value.UiNode.FindInTreeCommand}" Style="{StaticResource CommonMenuItem}"/>
                                        <MenuItem Header="Find resource in tree" Command="{Binding Value.UiNode.FindResourceInTreeCommand}" Style="{StaticResource CommonMenuItem}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type graphvm:ComponentGraphNodeViewModel}">
                            <Button Width="{Binding Width}" Height="{Binding Height}" Padding="2" Background="{StaticResource PxWhiteBrush}"
                                BorderBrush="{StaticResource PxBlue0Brush}" BorderThickness="2"
                                    Command="{Binding Value.UiNode.SetNextSelectedRecipeCommand }" VerticalContentAlignment="Stretch">
                                <Grid VerticalAlignment="Stretch">
                                    <StackPanel VerticalAlignment="Bottom" Orientation="Vertical">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Value.UiNode.BottomColumnText}"/>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Value.UiNode.ColumnText}"/>
                                    </StackPanel>
                                </Grid>
                                
                                <Button.ContextMenu>
                                    <ContextMenu Style="{StaticResource MaterialDesignMenu}">
                                        <MenuItem Header="Find in tree" Command="{Binding Value.UiNode.FindResourceInTreeCommand}" Style="{StaticResource CommonMenuItem}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.Resources>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                            <Setter Property="Canvas.Top"  Value="{Binding Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </localo:ZoomPanControl>

        <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Button Style="{StaticResource BaseButtonStyle}" Command="{Binding CenterizePanPositionCommand}" ToolTip="{h:Loc Return_to_the_tree_root}">
                <fa:ImageAwesome Icon="Home" Foreground="{StaticResource PxBlackBrush}" Width="24" Height="24" Margin="4"/>
            </Button>
            <Separator Style="{StaticResource MaterialDesignDarkSeparator}" Height="8"/>
            <Button Style="{StaticResource BaseButtonStyle}" Command="{Binding ZoomInCommand}" ToolTip="{h:Loc Zoom_in}">
                <fa:ImageAwesome Icon="Plus" Foreground="{StaticResource PxBlackBrush}" Width="16" Height="24"/>
            </Button>
            <Button Style="{StaticResource BaseButtonStyle}" Command="{Binding ZoomOutCommand}" ToolTip="{h:Loc Zoom_out}">
                <fa:ImageAwesome Icon="Minus" Foreground="{StaticResource PxBlackBrush}" Width="16" Height="24"/>
            </Button>
        </StackPanel>

        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <Button Style="{StaticResource BaseButtonStyle}" Command="{Binding MainWindowController.NameController.RandomizePostfixCommand}" ToolTip="{h:Loc The_button_that_does_the_weird_thing}" Width="32">
                <fa:ImageAwesome Icon="Question" Foreground="{StaticResource PxBlackBrush}" Width="16" Height="16" Margin="4"/>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
